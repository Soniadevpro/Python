# EXERCICE 11
# √âcrivez un programme pour trouver le plus petit parmi quatre nombres en utilisant des structures conditionnelles.
# Entr√©e : 10, 25, 5, 17
# Sortie : 5

dix = 10
vingtCinq = 25
cinq = 5
dixSept = 17

if dix < vingtCinq and dix < cinq and dix < dixSept:
    print(dix)
elif vingtCinq < dix and vingtCinq < cinq and vingtCinq < dixSept:
    print(vingtCinq)
elif cinq < dix and cinq < vingtCinq and cinq < dixSept:
    print(cinq)
else:
    print(dixSept)




# EXERCICE 12
# √âcrivez un programme pour v√©rifier si une temp√©rature donn√©e est froide, mod√©r√©e ou chaude.

# Temp√©rature < 10 : froide
# Temp√©rature entre 10 et 25 : mod√©r√©e
# Temp√©rature > 25 : chaude
# Entr√©e : 15
# Sortie : La temp√©rature est mod√©r√©e.


temperature = 8

if (temperature < 10):
    print("La temp√©rature est froide. ü•∂")
elif (temperature >= 10 and temperature <= 25):
    print("La temp√©rature est mod√©r√©e. üòä")
else:
    print("La temp√©rature est chaude. ü•µ")





# EXERCICE 13
# √âcrivez un programme pour v√©rifier si un nombre est positif, n√©gatif ou √©gal √† z√©ro.
# Entr√©e : -5
# Sortie : -5 est un nombre n√©gatif.

nb = -5

if nb > 0:
    print(f"{nb} est un nombre positif.")
elif nb < 0:
    print(f"{nb} est un nombre n√©gatif.")



# EXERCICE 14
# √âcrivez un programme pour v√©rifier si une personne est admissible √† voter ou non.
# Une personne est admissible si son √¢ge est sup√©rieur ou √©gal √† 18 ans.
# Entr√©e : 20
# Sortie : Vous √™tes admissible √† voter.


age = 20

if age >= 18:
    print("Vous √™tes admissible √† voter.")
else:
    print("Vous n'√™tes pas admissible √† voter.")





# EXERCICE 15
# √âcrivez un programme pour entrer une note d'examen (sur 20) et afficher la mention correspondante.

# Note >= 16 : Tr√®s bien
# Note >= 12 : Bien
# Note >= 8 : Passable
# Note < 8 : Insuffisant
# Entr√©e : 14
# Sortie : Mention Bien


# note = int (input("Entrez votre note: "))

# if note >= 16:
#     print("Tr√®s bien")
# elif note >= 12:
#     print("Bien")
# elif note >= 8:
#     print("Passable")
# else:
#     print("Insuffisant")




# EXERCICE 16
# √âcrivez un programme pour v√©rifier si un triangle est valide ou non √† l'aide des trois longueurs de ses c√¥t√©s.
# Un triangle est valide si la somme de deux c√¥t√©s est toujours sup√©rieure au troisi√®me c√¥t√©.
# Entr√©e : 7, 10, 5
# Sortie : C'est un triangle valide.


# cote1 = int(input("Entrez le premier c√¥t√©: "))
# cote2 = int(input("Entrez le deuxi√®me c√¥t√©: "))
# cote3 = int(input("Entrez le troisi√®me c√¥t√©: "))
# if cote1 + cote2 > cote3 or cote1 + cote3 > cote2 or cote2 + cote3 > cote1:
#     print("C'est un triangle valide.")
# else:
#     print("C'est un triangle invalide.")



# EXERCICE 17
# √âcrivez un programme pour d√©terminer si un nombre donn√© est un multiple de 5, 7 ou aucun des deux.
# Entr√©e : 35
# Sortie : 35 est un multiple de 5 et de 7.

nombre = 35

if nombre % 5 == 0 and nombre % 7 == 0:
    print(f"{nombre} est un multiple de 5 et de 7.")
elif nombre % 5 == 0:    
    print(f"{nombre} est un multiple de 5.")
elif nombre % 7 == 0:
    print(f"{nombre} est un multiple de 7.")
else:
    print(f"{nombre} n'est pas un multiple de 5 ni de 7.")



# EXERCICE 18
# √âcrivez un programme pour afficher le type de triangle (√©quilat√©ral, isoc√®le ou scal√®ne) selon les longueurs de ses trois c√¥t√©s.

# √âquilat√©ral : Tous les c√¥t√©s sont √©gaux.
# Isoc√®le : Deux c√¥t√©s sont √©gaux.
# Scal√®ne : Tous les c√¥t√©s sont diff√©rents.
# Entr√©e : 5, 5, 8
# Sortie : C'est un triangle isoc√®le.

cote1 = 5
cote2 = 5
cote3 = 8

if cote1 == cote2 and cote2 == cote3:
    print("C'est un triangle √©quilat√©ral.")
elif cote1 == cote2 or cote1 == cote3 or cote2 == cote3:
    print("C'est un triangle isoc√®le.")
else:
    print("C'est un triangle scal√®ne.")




# EXERCICE 19
# √âcrivez un programme pour v√©rifier si une personne est en sous-poids, poids normal ou en surpoids √† l'aide de son IMC (Indice de Masse Corporelle).


# IMC < 18.5 : Sous-poids
# IMC entre 18.5 et 24.9 : Poids normal
# IMC >= 25 : Surpoids
# Entr√©e : IMC = 22
# Sortie : Poids normal

imc = 22

if imc < 18.8:
    print("Sous-poids")
elif imc >= 18.5 and imc <= 24.9:
    print("Poids normal")
else:
    print("Surpoids")



# EXERCICE 20
# √âcrivez un programme pour convertir une note de lettre en note num√©rique.

# A : 90-100
# B : 80-89
# C : 70-79
# D : 60-69
# F : <60
# Entr√©e : B
# Sortie : La plage de la note est 80-89.


note_lettre = "D"

if note_lettre == "A":
    print("La plage de la note est 90-100.")
elif note_lettre == "B":
    print("La plage de la note est 80-89.")
elif note_lettre == "C":
    print("La plage de la note est 70-79.")
elif note_lettre == "D":
    print("La plage de la note est 60-69.")
else:
    print("La plage de la note est <60.")






# EXERCICE 21 : Calculatrice avanc√©e
# √âcrivez un programme qui demande √† l'utilisateur d'entrer deux nombres et une op√©ration math√©matique (+, -, *, /, %) et effectue l'op√©ration correspondante.

# Si l'utilisateur entre une op√©ration non valide, affichez un message d'erreur.
# Entr√©e : 15, 3, '/'
# Sortie : R√©sultat = 5


# nombre1 = int(input("Entrez le premier nombre: "))
# operation = input("Entrez l'op√©ration: ")
# nombre2 = int(input("Entrez le deuxi√®me nombre: "))

# if operation == "+":
#     print(f"R√©sultat = {nombre1 + nombre2}")
# elif operation == "-":
#     print(f"R√©sultat = {nombre1 - nombre2}")
# elif operation == "*":
#     print(f"R√©sultat = {nombre1 * nombre2}")
# elif operation == "/":
#     print(f"R√©sultat = {nombre1 / nombre2}")









# EXERCICE 22 : Tri des nombres
# √âcrivez un programme pour entrer trois nombres et les afficher en ordre croissant.
# Entr√©e : 45, 12, 78
# Sortie : 12, 45, 78



# premier = int(input("Entrez le premier nombre: "))
# deuxieme = int(input("Entrez le deuxi√®me nombre: "))
# troisieme = int(input("Entrez le troisi√®me nombre: "))
# if premier > deuxieme:
#     premier, deuxieme = deuxieme, premier
# if premier > troisieme:
#     premier, troisieme = troisieme, premier
# if deuxieme > troisieme:
#     deuxieme, troisieme = troisieme, deuxieme
# print(premier, deuxieme, troisieme)







# EXERCICE 23 : Calcul des notes finales
# √âcrivez un programme pour entrer les notes de plusieurs mati√®res (par exemple : math√©matiques, physique, chimie), calculer la moyenne et d√©terminer si l'√©l√®ve est admis ou non :

# Moyenne >= 10 : admis
# Moyenne < 10 : non admis
# Entr√©e : 12, 8, 15
# Sortie : Moyenne = 11.67, R√©sultat = Admis

math = 12
physique = 8
chimie = 15

moyenne = (math + physique + chimie) / 3

if moyenne >= 10:
    print(f"Moyenne = {moyenne}, R√©sultat = Admis")
else:
    print(f"Moyenne = {moyenne}, R√©sultat = Non admis")









# EXERCICE 24 : Classification des triangles avanc√©e
# Ajoutez une v√©rification suppl√©mentaire √† l'exercice pr√©c√©dent (triangle valide) pour d√©terminer si le triangle est :

# Rectangle (respecte le th√©or√®me de Pythagore).
# Non rectangle.
# Entr√©e : 3, 4, 5
# Sortie : Triangle rectangle.











# EXERCICE 25 : V√©rification des mots de passe
# √âcrivez un programme pour demander √† l'utilisateur de cr√©er un mot de passe, puis de le v√©rifier.

# Le mot de passe doit contenir au moins 8 caract√®res, inclure au moins une majuscule, un chiffre et un caract√®re sp√©cial.
# Affichez si le mot de passe est valide ou non.
# Entr√©e : P@ssword123
# Sortie : Mot de passe valide.
# EXERCICE 26 : Ann√©e bissextile sur une plage d'ann√©es
# Demandez √† l'utilisateur une plage d'ann√©es (par exemple, 2000 √† 2020) et affichez toutes les ann√©es bissextiles de cette plage.
# Entr√©e : 2000, 2020
# Sortie : Ann√©es bissextiles : 2000, 2004, 2008, 2012, 2016, 2020.

# EXERCICE 27 : Conversion des unit√©s de temp√©rature
# √âcrivez un programme qui demande √† l'utilisateur d'entrer une temp√©rature en degr√©s Celsius ou Fahrenheit et de convertir cette temp√©rature dans l'autre unit√©.
# Formules :

# De Celsius √† Fahrenheit : 
# ùêπ
# =
# ùê∂
# √ó
# 9
# 5
# +
# 32
# F=C√ó 
# 5
# 9
# ‚Äã
#  +32
# De Fahrenheit √† Celsius : 
# ùê∂
# =
# (
# ùêπ
# ‚àí
# 32
# )
# √ó
# 5
# 9
# C=(F‚àí32)√ó 
# 9
# 5
# ‚Äã
 
# Entr√©e : 100¬∞C
# Sortie : 212¬∞F
# EXERCICE 28 : Conversion des heures au format 12h/24h
# √âcrivez un programme qui demande √† l'utilisateur une heure au format 24h et la convertit au format 12h, ou vice versa.
# Entr√©e : 14:30 (format 24h)
# Sortie : 2:30 PM

# EXERCICE 29 : Num√©ro de t√©l√©phone valide
# √âcrivez un programme pour v√©rifier si un num√©ro de t√©l√©phone entr√© par l'utilisateur est valide :

# Il doit comporter exactement 10 chiffres.
# Il doit commencer par un chiffre entre 6 et 9.
# Entr√©e : 9876543210
# Sortie : Num√©ro valide.
# EXERCICE 30 : Jeu : Deviner un nombre
# √âcrivez un programme o√π l'ordinateur choisit un nombre au hasard entre 1 et 100, et l'utilisateur doit deviner ce nombre. Le programme donne des indices :

# "Plus grand" ou "Plus petit" selon le cas.
# Arr√™tez une fois que le nombre est trouv√©.
# Entr√©e : 50 (tentative utilisateur), 75 (tentative utilisateur), 70 (tentative utilisateur)
# Sortie : F√©licitations, vous avez trouv√© le nombre : 70






